{"version":3,"file":"index.mjs","sources":["../lib/ascending.js","../lib/subtract.js","../lib/cdf.js","../lib/print.js","../lib/main.js","../lib/get_cdf.js","../lib/validate.js","../lib/marsaglia.js","../lib/smirnov.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// EXPORTS //\n\nexport default ascending;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes an element-wise subtraction.\n*\n* @private\n* @param {number} x - scalar minuend (implicitly broadcasted to full length array)\n* @param {NumericArray} arr - array of subtrahends\n* @returns {NumericArray} output array\n*\n* @example\n* var x = 3;\n* var arr = [ 1, 2, 2, 3 ];\n*\n* var y = subtract( x, arr );\n* // returns [ 2, 1, 1, 0 ]\n*/\nfunction subtract( x, arr ) {\n\tvar len;\n\tvar res;\n\tvar i;\n\n\tlen = arr.length;\n\tres = new Array( len );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tres[ i ] = x - arr[ i ];\n\t}\n\n\treturn res;\n}\n\n\n// EXPORTS //\n\nexport default subtract;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport arcsine from '@stdlib/stats-base-dists-arcsine-cdf';\nimport beta from '@stdlib/stats-base-dists-beta-cdf';\nimport betaprime from '@stdlib/stats-base-dists-betaprime-cdf';\nimport cauchy from '@stdlib/stats-base-dists-cauchy-cdf';\nimport chi from '@stdlib/stats-base-dists-chi-cdf';\nimport chisquare from '@stdlib/stats-base-dists-chisquare-cdf';\nimport cosine from '@stdlib/stats-base-dists-cosine-cdf';\nimport erlang from '@stdlib/stats-base-dists-erlang-cdf';\nimport exponential from '@stdlib/stats-base-dists-exponential-cdf';\nimport f from '@stdlib/stats-base-dists-f-cdf';\nimport frechet from '@stdlib/stats-base-dists-frechet-cdf';\nimport gamma from '@stdlib/stats-base-dists-gamma-cdf';\nimport gumbel from '@stdlib/stats-base-dists-gumbel-cdf';\nimport invgamma from '@stdlib/stats-base-dists-invgamma-cdf';\nimport kumaraswamy from '@stdlib/stats-base-dists-kumaraswamy-cdf';\nimport laplace from '@stdlib/stats-base-dists-laplace-cdf';\nimport levy from '@stdlib/stats-base-dists-levy-cdf';\nimport logistic from '@stdlib/stats-base-dists-logistic-cdf';\nimport lognormal from '@stdlib/stats-base-dists-lognormal-cdf';\nimport normal from '@stdlib/stats-base-dists-normal-cdf';\nimport pareto1 from '@stdlib/stats-base-dists-pareto-type1-cdf';\nimport rayleigh from '@stdlib/stats-base-dists-rayleigh-cdf';\nimport t from '@stdlib/stats-base-dists-t-cdf';\nimport triangular from '@stdlib/stats-base-dists-triangular-cdf';\nimport uniform from '@stdlib/stats-base-dists-uniform-cdf';\nimport weibull from '@stdlib/stats-base-dists-weibull-cdf';\n\n\n// MAIN //\n\nvar CDF = {};\n\nCDF[ 'arcsine' ] = arcsine;\nCDF[ 'beta' ] = beta;\nCDF[ 'betaprime' ] = betaprime;\nCDF[ 'cauchy' ] = cauchy;\nCDF[ 'chi' ] = chi;\nCDF[ 'chisquare' ] = chisquare;\nCDF[ 'cosine' ] = cosine;\nCDF[ 'erlang' ] = erlang;\nCDF[ 'exponential' ] = exponential;\nCDF[ 'f' ] = f;\nCDF[ 'frechet' ] = frechet;\nCDF[ 'gamma' ] = gamma;\nCDF[ 'gumbel' ] = gumbel;\nCDF[ 'invgamma' ] = invgamma;\nCDF[ 'kumaraswamy' ] = kumaraswamy;\nCDF[ 'laplace' ] = laplace;\nCDF[ 'levy' ] = levy;\nCDF[ 'logistic' ] = logistic;\nCDF[ 'lognormal' ] = lognormal;\nCDF[ 'normal' ] = normal;\nCDF[ 'pareto-type1' ] = pareto1;\nCDF[ 'rayleigh' ] = rayleigh;\nCDF[ 't' ] = t;\nCDF[ 'triangular' ] = triangular;\nCDF[ 'uniform' ] = uniform;\nCDF[ 'weibull' ] = weibull;\n\n\n// EXPORTS //\n\nexport default CDF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport roundn from '@stdlib/math-base-special-roundn';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '1Ld3L', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( '1Ld3P', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( '1Ld2o', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: the CDF of `x` is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'greater than or equal to ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'less than or equal to ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'equal to ';\n\t\tbreak;\n\t}\n\tstr += 'the reference CDF';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts );\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isTypedArrayLike from '@stdlib/assert-is-typed-array-like';\nimport isNumber from '@stdlib/assert-is-number';\nimport { primitives as isNumberArray } from '@stdlib/assert-is-number-array';\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport isnan from '@stdlib/assert-is-nan';\nimport max from '@stdlib/stats-base-max';\nimport pKolmogorov1 from './smirnov.js';\nimport pKolmogorov from './marsaglia.js';\nimport ascending from './ascending.js';\nimport subtract from './subtract.js';\nimport validate from './validate.js';\nimport getCDF from './get_cdf.js';\nimport print from './print.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// FUNCTIONS //\n\nvar slice = Array.prototype.slice;\n\n\n// MAIN //\n\n/**\n* Computes a Kolmogorov-Smirnov goodness-of-fit test.\n*\n* @param {NumericArray} x - input array holding numeric values\n* @param {(Function|string)} y - either a CDF function or a string denoting the name of a distribution\n* @param {...number} [params] - distribution parameters passed to reference CDF\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {boolean} [options.sorted=false] - boolean indicating if the input array is already in sorted order\n* @param {string} [options.alternative=\"two-sided\"] - string indicating whether to conduct two-sided or one-sided hypothesis test (other options: `less`, `greater`)\n* @throws {TypeError} argument x has to be a typed array or array of numbers\n* @throws {TypeError} argument y has to be a CDF function or string\n* @throws {TypeError} options must be an object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} sorted option has to be a boolean\n* @returns {Object} test result object\n*\n* @example\n* var out = kstest( [ 2.0, 1.0, 5.0, -5.0, 3.0, 0.5, 6.0 ], 'normal', 0.0, 1.0 );\n* // returns { 'pValue': ~0.015, 'statistic': ~0.556, ... }\n*/\nfunction kstest() {\n\tvar nDistParams;\n\tvar distParams;\n\tvar distArgs;\n\tvar options;\n\tvar alpha;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar yVal;\n\tvar alt;\n\tvar err;\n\tvar idx;\n\tvar out;\n\tvar val;\n\tvar i;\n\tvar n;\n\tvar x;\n\tvar y;\n\n\tx = arguments[ 0 ];\n\ty = arguments[ 1 ];\n\tif ( !isNumberArray( x ) && !isTypedArrayLike( x ) ) {\n\t\tthrow new TypeError( format( '1Ld9s', x ) );\n\t}\n\tif ( !isFunction( y ) && !isString( y ) ) {\n\t\tthrow new TypeError( format( '1Ld9t', y ) );\n\t}\n\tif ( isString( y ) ) {\n\t\ty = getCDF( y );\n\t}\n\tnDistParams = y.length - 1.0;\n\tn = x.length;\n\n\tdistParams = new Array( nDistParams );\n\tfor ( i = 0; i < nDistParams; i++ ) {\n\t\tidx = i + 2;\n\t\tval = arguments[ idx ];\n\t\tif ( !isNumber( val ) || isnan( val ) ) {\n\t\t\tthrow new TypeError( format( '1Ld9u', val ) );\n\t\t}\n\t\tdistParams[ i ] = arguments[ idx ];\n\t}\n\topts = {};\n\tif ( arguments.length > 2 + nDistParams ) {\n\t\toptions = arguments[ 2 + nDistParams ];\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Make a copy to prevent mutation of x:\n\tx = slice.call( x );\n\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( '1Ld8V', 'alpha', alpha ) );\n\t}\n\n\t// Input data has to be sorted:\n\tif ( opts.sorted !== true ) {\n\t\tx.sort( ascending );\n\t}\n\tdistArgs = [ null ].concat( distParams );\n\tfor ( i = 0; i < n; i++ ) {\n\t\tdistArgs[ 0 ] = x[ i ];\n\t\tyVal = y.apply( null, distArgs );\n\t\tx[ i ] = yVal - ( i / n );\n\t}\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tstat = max( n, [ max( n, x, 1 ), max( n, subtract( 1/n, x ), 1 ) ], 1 );\n\t\tbreak;\n\tcase 'greater':\n\t\tstat = max( n, subtract( 1/n, x ), 1 );\n\t\tbreak;\n\tcase 'less':\n\t\tstat = max( n, x, 1 );\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( '1Ld4S', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tif ( alt === 'two-sided' ) {\n\t\tpval = 1.0 - pKolmogorov( stat, n );\n\t} else {\n\t\tpval = 1.0 - pKolmogorov1( stat, n );\n\t}\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'method', 'Kolmogorov-Smirnov goodness-of-fit test' );\n\tsetReadOnly( out, 'print', print );\n\tsetReadOnly( out, 'alternative', alt );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default kstest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport CDF from './cdf.js';\n\n\n// MAIN //\n\n/**\n* Returns the cumulative distribution function (CDF) corresponding to a provided distribution name.\n*\n* @private\n* @param {string} name - distribution name\n* @throws {Error} unsupported/unrecognized distribution name\n* @returns {Function} cumulative distribution function (CDF)\n*/\nfunction getCDF( name ) {\n\tvar cdf = CDF[ name ];\n\tif ( cdf === void 0 ) {\n\t\tthrow new Error( format( '1Ld9K', name ) );\n\t}\n\treturn cdf;\n}\n\n\n// EXPORTS //\n\nexport default getCDF;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport isnan from '@stdlib/assert-is-nan';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {boolean} [options.sorted] - boolean indicating if the input data is already sorted in ascending order\n* @param {string} [options.alternative] - alternative hypothesis\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '1Ld2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( '1Ld8P', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( '1Ld2W', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sorted' ) ) {\n\t\topts.sorted = options.sorted;\n\t\tif ( !isBoolean( opts.sorted ) ) {\n\t\t\treturn new TypeError( format( '1Ld2o', 'sorted', opts.sorted ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor';\nimport sqrt from '@stdlib/math-base-special-sqrt';\nimport pow from '@stdlib/math-base-special-pow';\nimport exp from '@stdlib/math-base-special-exp';\nimport Float64Array from '@stdlib/array-float64';\n\n\n// MAIN //\n\n/**\n* Evaluates the Kolmogorov distribution. This function is a JavaScript implementation of a procedure developed by Marsaglia & Tsang.\n*\n* ## References\n*\n* -   Marsaglia, George, Wai Wan Tsang, and Jingbo Wang. 2003. \"Evaluating Kolmogorov's Distribution.\" _Journal of Statistical Software_ 8 (18): 1–4. doi:[10.18637/jss.v008.i18](https://doi.org/10.18637/jss.v008.i18).\n*\n* @private\n* @param {number} d - the argument of the CDF of D_n\n* @param {number} n - number of variates\n* @returns {number} evaluated CDF, i.e. P( D_n < d )\n*/\nfunction pKolmogorov( d, n ) {\n\tvar eH;\n\tvar eQ;\n\tvar h;\n\tvar H;\n\tvar Q;\n\tvar g;\n\tvar i;\n\tvar j;\n\tvar k;\n\tvar m;\n\tvar s;\n\n\ts = d * d * n;\n\tif ( s > 7.24 || ( s > 3.76 && n > 99 ) ) {\n\t\treturn 1 - (2 * exp( -( 2.000071 + (0.331/sqrt(n)) + (1.409/n) ) * s ));\n\t}\n\tk = floor( n * d ) + 1;\n\tm = (2*k) - 1;\n\th = k - (n*d);\n\tH = new Float64Array( m * m );\n\tQ = new Float64Array( m * m );\n\tfor ( i = 0; i < m; i++ ) {\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\tif ( i - j + 1 < 0 ) {\n\t\t\t\tH[ (i*m) + j ] = 0;\n\t\t\t} else {\n\t\t\t\tH[ (i*m) + j ] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor ( i = 0; i < m; i++ ) {\n\t\tH[ i * m ] -= pow( h, i+1 );\n\t\tH[ ((m-1) * m) + i ] -= pow( h, (m-i) );\n\t}\n\tH[ (m-1) * m ] += ( ( (2*h)-1 > 0 ) ? pow( (2*h)-1, m ) : 0 );\n\tfor ( i = 0; i < m; i++ ) {\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\tif ( i - j + 1 > 0 ) {\n\t\t\t\tfor ( g = 1; g <= i - j + 1; g++ ) {\n\t\t\t\t\tH[ (i*m) + j ] /= g;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\teH = 0;\n\tmpow( H, eH, n );\n\ts = Q[ ((k-1) * m) + k - 1 ];\n\tfor ( i = 1; i <= n; i++ ) {\n\t\ts = s * i / n;\n\t\tif ( s < 1e-140 ) {\n\t\t\ts *= 1e140;\n\t\t\teQ -= 140;\n\t\t}\n\t}\n\ts *= pow( 10, eQ );\n\treturn s;\n\n\t/**\n\t* Matrix exponentiation. Mutates Q matrix.\n\t*\n\t* @private\n\t* @param {Float64Array} A - input matrix\n\t* @param {number} eA - matrix power\n\t* @param {number} n - number of variates\n\t*/\n\tfunction mpow( A, eA, n ) {\n\t\tvar eB;\n\t\tvar B;\n\t\tvar i;\n\n\t\tif ( n === 1 ) {\n\t\t\tfor ( i = 0; i < m*m; i++ ) {\n\t\t\t\tQ[ i ] = A[ i ];\n\t\t\t\teQ = eA;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tmpow( A, eA, floor( n/2 ) );\n\t\tB = mmult( Q, Q );\n\t\teB = 2 * eQ;\n\t\tif ( n % 2 === 0 ) {\n\t\t\tfor ( i = 0; i < m*m; i++ ) {\n\t\t\t\tQ[ i ] = B[ i ];\n\t\t\t}\n\t\t\teQ = eB;\n\t\t} else {\n\t\t\tQ = mmult( A, B );\n\t\t\teQ = eA + eB;\n\t\t}\n\t\tif ( Q[ (floor(m/2) * m) + floor(m/2) ] > 1e140 ) {\n\t\t\tfor ( i = 0; i < m*m; i++ ) {\n\t\t\t\tQ[ i ] *= 1e-140;\n\t\t\t}\n\t\t\teQ += 140;\n\t\t}\n\t}\n\n\t/**\n\t* Multiply matrices x and y.\n\t*\n\t* @private\n\t* @param {Float64Array} x - first input matrix\n\t* @param {Float64Array} y - second input matrix\n\t* @returns {Float64Array} matrix product\n\t*/\n\tfunction mmult( x, y ) {\n\t\tvar i;\n\t\tvar j;\n\t\tvar k;\n\t\tvar s;\n\t\tvar z;\n\n\t\tz = new Float64Array( m * m );\n\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\t\ts = 0;\n\t\t\t\tfor ( k = 0; k < m; k++ ) {\n\t\t\t\t\ts += x[ (i*m) + k ] * y[ (k*m) + j ];\n\t\t\t\t\tz[ (i*m) + j ] = s;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn z;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default pKolmogorov;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport binomcoefln from '@stdlib/math-base-special-binomcoefln';\nimport floor from '@stdlib/math-base-special-floor';\nimport exp from '@stdlib/math-base-special-exp';\nimport ln from '@stdlib/math-base-special-ln';\n\n\n// MAIN //\n\n/**\n* Evaluates the CDF for the one-sided test statistics, i.e., the maximum by which the empirical CDF exceeds / is less than the hypothesized CDF.\n*\n* @private\n* @param {number} d - the argument of the CDF of D_n^+ / D_n^-\n* @param {PositiveInteger} n - number of variates\n* @returns {number} evaluated CDF, i.e., P( D_n^+ < d )\n*/\nfunction pKolmogorov1( d, n ) {\n\tvar len;\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tif ( d <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( d >= 1.0 ) {\n\t\treturn 1.0;\n\t}\n\tlen = floor( n * (1.0-d) ) + 1;\n\tout = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\ttmp = binomcoefln( n, i );\n\t\ttmp += ( n - i ) * ln( 1.0 - d - (i/n) );\n\t\ttmp += ( i - 1.0 ) * ln( d + (i/n) );\n\t\tout += exp( tmp );\n\t}\n\treturn 1.0 - (d * out);\n}\n\n\n// EXPORTS //\n\nexport default pKolmogorov1;\n"],"names":["ascending","a","b","subtract","x","arr","len","res","i","length","Array","CDF","print","opts","decision","dgts","str","arguments","isObject","TypeError","format","hasOwnProp","isPositiveInteger","digits","isBoolean","this","method","alternative","roundn","pValue","statistic","rejected","alpha","arcsine","beta","betaprime","cauchy","chi","chisquare","cosine","erlang","exponential","f","frechet","gamma","gumbel","invgamma","kumaraswamy","laplace","levy","logistic","lognormal","normal","pareto1","rayleigh","t","triangular","uniform","weibull","slice","prototype","kstest","nDistParams","distParams","distArgs","pval","stat","yVal","alt","err","idx","out","val","n","y","isNumberArray","isTypedArrayLike","isFunction","isString","name","cdf","Error","getCDF","isNumber","isnan","options","sorted","validate","call","RangeError","sort","concat","apply","max","join","d","eQ","h","H","Q","g","j","k","m","s","exp","sqrt","floor","Float64Array","pow","mpow","A","eA","eB","B","mmult","z","pKolmogorov","tmp","binomcoefln","ln","pKolmogorov1","setReadOnly"],"mappings":"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"}